<!--
***********************************************************************************************
FileSystemCopyPublish.targets
  
  A basic crude filesystem copy replacement for the "classic" WebPublish target from Visual Studio. 
  
  Note; Relies on the Content msbuild item group. 
        This should not contain globs in subdirs. f.ex. app_config/**/*.config will ignore the 
        folder /app_config/ on copy.
  
                                                                      [Anders Laub // Laub+Co]
                                                                      
***********************************************************************************************
-->

<Project Condition="'$(UseFileSystemCopyPublish)' == 'true'">

  <PropertyGroup>

    <PublishDependsOn>
      BeforePublish;
      FileSystemCopyPublish;
      AfterPublish;
    </PublishDependsOn>

    <!-- Legacy support attempt - perhaps remove -->
    <WebPublishDependsOn>
      BeforePublish;
      FileSystemCopyPublish;
      AfterPublish;
    </WebPublishDependsOn>

    <FileSystemCopyPublishDependsOn>
       $(FileSystemCopyPublishDependsOn);
      _EnsurePublishTargetDirectory;
      _GatherContentFromLegacyNugets;
      _GatherPackageReferenceAssemblies;
      _GatherFilesForFileSystemCopyPublish;
      _ExcludeFilesFromFileSystemCopyPublish;
      _FileSystemCopyPublishCopyFiles;
    </FileSystemCopyPublishDependsOn>

    <_DeployOnBuildDependsOn>
      $(_DeployOnBuildDependsOn);
      $(PublishDependsOn);
    </_DeployOnBuildDependsOn>

  </PropertyGroup>


  <!-- Extension points for BeforePublish and AfterPublish-->
  <Target Name="BeforePublish" />
  <Target Name="AfterPublish" />

  <!--
  ***********************************************************************************************
  TARGET : _EnsurePublishTargetDirectory

      Ensures the publish target directory exists
  ***********************************************************************************************
 -->
  <Target Name="_EnsurePublishTargetDirectory">
    <Message Importance="High" Text="Creating $(PublishTargetDirectory)" Condition="!Exists('$(PublishTargetDirectory)')" />
    <MakeDir Directories="$(PublishTargetDirectory)" Condition="!Exists('$(PublishTargetDirectory)')" />
    <MakeDir Directories="$(PublishTargetDirectory)\bin" Condition="!Exists('$(PublishTargetDirectory)\bin')" />
  </Target>

  <!--
  ***********************************************************************************************
  TARGET : _GatherFilesForFileSystemCopyPublish

  
      Gather all content and compiled assemblies from project that should be copied. 
      Note; no temporary folder is made since no transformations are performed on the copied 
      files.
  ***********************************************************************************************
 -->
  <Target Name="_GatherFilesForFileSystemCopyPublish">
    <PropertyGroup>
      <OutDir Condition="!HasTrailingSlash('$(OutDir)')">$(OutDir)\</OutDir>
    </PropertyGroup>

    <ItemGroup Condition="'$(PublishSolutionOutput)' != 'true'">
      <_FileSystemCopyPublishFiles Include="@(Content)" />
    </ItemGroup>

    <ItemGroup Condition="'$(PublishSolutionOutput)' == 'true'">
      <_FileSystemCopyPublishFiles Include="$(OutDir)**\*.*" Exclude="$(OutDir)**\*.dll;$(OutDir)**\*.pdb;$(OutDir)**\*.dll.config;$(OutDir)**\*.dll.xml" />
    </ItemGroup>

    <ItemGroup>
      <_AssembliesForFileSystemCopy Include="$(OutDir)**\*.dll;$(OutDir)**\*.pdb;$(OutDir)**\*.dll.config;$(OutDir)**\*.dll.xml" />
      <_FileSystemCopyBinAssemblies Include="@(_AssembliesForFileSystemCopy)" Condition="'$(UseBinFolder)' != 'false'" />
      <_FileSystemCopyPublishFiles Include="@(_AssembliesForFileSystemCopy)" Condition="'$(UseBinFolder)' == 'false'" />
    </ItemGroup>
  </Target>

  <!--
  ***********************************************************************************************
  TARGET : _ExcludeFilesFromFileSystemCopyPublish
  ***********************************************************************************************
 -->
  <Target Name="_ExcludeFilesFromFileSystemCopyPublish" Condition="'$(LegacyPreventCopyLocal)' == 'true'">
    <!-- _IgnoredFiles
          Item group for containing assembly names etc. that should not be published.
          Default contains the SitecoreAssemblies item group (ootb assemblies) 
          reference the Sitecore.Platform.Assemblies nuget package to set this.
        -->
    <ItemGroup>
      <_IgnoredFiles Include="@(SitecoreAssemblies)" Condition="'@(SitecoreAssemblies)' != ''" />

      <!-- Temporary; assembly is missing in the SitecoreAssemblies list -->
      <_IgnoredFiles Include="Sitecore.LayoutService.dll" />
    </ItemGroup>

    <ItemGroup>
      <_FileSystemCopyPublishFiles Remove="@(_IgnoredFiles)" Condition="'%(Filename)' != '' and '@(_IgnoredFiles)' != ''" />
      <_FileSystemCopyBinAssemblies Remove="@(_IgnoredFiles)" Condition="'%(Filename)' != '' and '@(_IgnoredFiles)' != ''" />
      <_FileSystemCopyPublishReferenceAssemblies Remove="@(_IgnoredFiles)" Condition="'%(Filename)' != '' and '@(_IgnoredFiles)' != ''" />
    </ItemGroup>
  </Target>

  <!--
  ***********************************************************************************************
  TARGET : _GatherContentFromLegacyNugets
    
      Gather content and assemblies from legacy nugets

      <PackageReference ...
        <CopyLegacyContentPath>{rel path/glob within nuget}</CopyLegacyContentPath>
        <CopyLegacyAssembliesPath>{rel path/glob within nuget}</CopyLegacyAssembliesPath>

        .. NOTE; Require explicit package version number and reference - no transient support
  ***********************************************************************************************
 -->

  <Target Name="_GatherContentFromLegacyNugets" Condition="'$(SupportLegacyNugets)' == 'true'">
    <ItemGroup>
      <_LegacyNugetPackageContent Condition="%(PackageReference.CopyLegacyContentPath) != ''" Include="$(NugetPackageRoot)\%(PackageReference.Identity)\%(PackageReference.Version)\%(PackageReference.CopyLegacyContentPath)" />
      <_FileSystemCopyPublishFiles Include="@(_LegacyNugetPackageContent)" />
    </ItemGroup>
  </Target>


  <Target Name="_GatherPackageReferenceAssemblies" AfterTargets="_CopyFilesMarkedCopyLocal" Condition="'$(PublishAssembliesMarkedLocal)' == 'true' ">
    <ItemGroup>
      <_PackageReferenceAssemblies Include="@(ReferenceCopyLocalPaths)" Condition="'%(ReferenceCopyLocalPaths.NuGetPackageId)' != '' AND ('%(Extension)' == '.dll' or '%(Extension)' == '.pdb')" />
      <_FileSystemCopyBinAssemblies Include="@(_PackageReferenceAssemblies)" Condition="'$(UseBinFolder)' != 'false'" />
      <_FileSystemCopyPublishFiles Include="@(_PackageReferenceAssemblies)" Condition="'$(UseBinFolder)' == 'false'" />
    </ItemGroup>
  </Target>


  <Target Name="_CopyPackageReferenceAssembliesToOutputDir" AfterTargets="_GatherPackageReferenceAssemblies" Condition="'@(_PackageReferenceAssemblies)' != '' AND '$(UseFileSystemCopyPublish)' == 'true' AND '$(DeployOnBuild)' != 'true'">
    <Copy SourceFiles="@(_PackageReferenceAssemblies)" DestinationFiles="@(_PackageReferenceAssemblies->'$(OutDir)%(DestinationSubDirectory)%(FileName)%(Extension)')" SkipUnchangedFiles="True" OverwriteReadOnlyFiles="False" />
  </Target>

  <!--
  ***********************************************************************************************
  TARGET : _CopyLegacyNugetContent
    
      Copy nuget packageref content when a Content Path is set on packageref el
      to output dir even though the project itself is not individually deployed in current build.

  ***********************************************************************************************
 -->
  <Target Name="_CopyLegacyNugetContentToOutputDir" DependsOnTargets="_GatherContentFromLegacyNugets" BeforeTargets="Build" Condition="'$(SupportLegacyNugets)' == 'true' AND '$(UseFileSystemCopyPublish)' == 'true' AND '$(DeployOnBuild)' != 'true'">
    <Copy SourceFiles="@(_LegacyNugetPackageContent)" DestinationFiles="@(_LegacyNugetPackageContent->'$(OutDir)\%(RecursiveDir)%(Filename)%(Extension)')" SkipUnchangedFiles="true" OverwriteReadOnlyFiles="false" />
  </Target>


  <Target Name="_SkipAppConfig" BeforeTargets="_CopyAppConfigFile" Condition="'@(AppConfigWithTargetPath)' != ''">
    <ItemGroup>
      <AppConfigWithTargetPath Remove="$(AppConfig)" />
    </ItemGroup>
  </Target>

  <!--
  ***********************************************************************************************
  TARGET : _FileSystemCopyPublishCopyFiles
    
      Performs the copy
  ***********************************************************************************************
 -->
  <Target Name="_FileSystemCopyPublishCopyFiles">

    <PropertyGroup>
      <PublishSkipUnchangedFiles Condition="'$(PublishSkipUnchangedFiles)' == ''">true</PublishSkipUnchangedFiles>
    </PropertyGroup>

    <!-- Debug messages; consider if should just be Info  -->
    <Message Importance="High" Condition="'$(PublishSolutionOutput)' == 'true'" Text="$(MSBuildProjectName): Copying role type '$(SitecoreRoleType)' solution output for to '$(PublishTargetDirectory)'" />
    <Message Importance="High" Condition="'$(PublishSolutionOutput)' != 'true'" Text=" $(MSBuildProjectName): Copying project output to '$(PublishTargetDirectory)'" />

    <Copy SourceFiles="@(_FileSystemCopyPublishFiles)" DestinationFiles="@(_FileSystemCopyPublishFiles->'$(PublishTargetDirectory)\%(RecursiveDir)%(Filename)%(Extension)')" SkipUnchangedFiles="$(PublishSkipUnchangedFiles)" OverwriteReadOnlyFiles="true" />
    <Copy Condition="'$(UseBinFolder)' != 'false'" SourceFiles="@(_FileSystemCopyBinAssemblies)" DestinationFiles="@(_FileSystemCopyBinAssemblies->'$(PublishTargetDirectory)bin\%(RecursiveDir)%(Filename)%(Extension)')" SkipUnchangedFiles="$(PublishSkipUnchangedFiles)" OverwriteReadOnlyFiles="true" />

  </Target>

  <!--
  ***********************************************************************************************
  TARGET : FileSystemCopyPublish
    
      Trigger the pipeline - FileSystemCopyPublishDependsOn targets
  ***********************************************************************************************
 -->
  <Target Name="FileSystemCopyPublish" DependsOnTargets="$(FileSystemCopyPublishDependsOn)" Condition="'$(UseFileSystemCopyPublish)' == 'true' AND '$(PublishTargetDirectory)' != ''">
  </Target>


  <Target Name="_DeployOnBuild" DependsOnTargets="$(_DeployOnBuildDependsOn)" AfterTargets="Build" Condition="'$(UseFileSystemCopyPublish)' == 'true' AND '$(DeployOnBuild)'== 'true'">
  </Target>

</Project>