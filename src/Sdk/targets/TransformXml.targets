<!--
***********************************************************************************************
Website.TransformXml.targets
  
  Transform any xml files located in publish root folder using xdt.
  
  [Naming convention]
  
    [filename].[extension].{Configuration}|Any].{XmlTransformFilePostfix}
   
     Ex.         
        web.config.any.xdt
        web.config.debug.xdt
        somefile.xml.any.xdt
        web.config.release.xdt
       

    IMPORTANT NOTE; 
    
      This task is dependent on a legacy Visual Studio build task 
      
      - only use for local dev machines or on VS build agents.   


                                                                      [Anders Laub // Laub+Co]
                                                                      
***********************************************************************************************
-->

<Project Condition="'$(RunXmlTransforms)' == 'true'">

  <PropertyGroup>
    <_VisualStudioTransformTaskAvailable>false</_VisualStudioTransformTaskAvailable>
    <_VisualStudioTransformTaskAvailable Condition="exists('$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)\Web\Microsoft.Web.Publishing.Tasks.dll')">true</_VisualStudioTransformTaskAvailable>
  </PropertyGroup>

  <UsingTask TaskName="TransformXml" 
              AssemblyFile="$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)\Web\Microsoft.Web.Publishing.Tasks.dll"
              Condition="'$(RunXmlTransforms)' == 'true' and '$(_VisualStudioTransformTaskAvailable)' == 'true'" />

  <Target  Name="RunTransforms" Condition="'$(RunXmlTransforms)' == 'true' AND '$(_VisualStudioTransformTaskAvailable)' != 'true'">
    <Message Importance="High" Text="The TransformXml task require Visual Studio build tools to be available. Use the VSBuild task in DevOps pipelines." />
  </Target>

  <Target Name="RunTransforms" Condition="'$(RunXmlTransforms)' == 'true' AND '$(_VisualStudioTransformTaskAvailable)' == 'true'">
    <PropertyGroup>
      <TransformXmlDestinationRootDir Condition="'$(TransformXmlDestinationRootDir)' == ''">$(PublishTargetDirectory)</TransformXmlDestinationRootDir>
    </PropertyGroup>
    <ItemGroup>
      <SourceTransformFiles Include="**\*.$(Configuration).$(XmlTransformFilePostfix);**\*.Any.$(XmlTransformFilePostfix)" Condition="'$(XmlTransformSkipBuildConfig)'!='true'" Exclude="$(BaseIntermediateOutputPath)**\*.*" />
      <SourceTransformFiles Include="**\*.$(XmlTransformInstanceRole).$(XmlTransformFilePostfix)" Condition="'$(XmlTransformInstanceRole)'!=''" Exclude="$(BaseIntermediateOutputPath)**\*.*" />
      <SourceTransformFiles Include="**\*.$(XmlTransformEnvironment).$(XmlTransformFilePostfix)" Condition="'$(XmlTransformEnvironment)'!=''" Exclude="$(BaseIntermediateOutputPath)**\*.*" />
      <TransformFiles Include="%(SourceTransformFiles.Identity)">
        <DestinationFile Condition="'@(SourceTransformFiles)'!=''">$(TransformXmlDestinationRootDir)%(RelativeDir)\$([System.Text.RegularExpressions.Regex]::Match(%(Filename), `.*?\.config|.*?\.xml`))</DestinationFile>
      </TransformFiles>
    </ItemGroup>

    <Message Importance="High" Text="Transforming %(TransformFiles.RelativeDir)%(TransformFiles.Identity) into %(TransformFiles.DestinationFile)" Condition="'@(SourceTransformFiles)'!=''" />

    <Warning Text="Could not find destination file %(TransformFiles.DestinationFile) for %(TransformFiles.Identity)" Condition="'@(SourceTransformFiles)'!='' And !Exists(%(TransformFiles.DestinationFile))" />

    <TransformXml Source="%(DestinationFile)" Transform="%(FullPath)" Destination="%(DestinationFile)" Condition="'@(TransformFiles)'!='' And Exists(%(DestinationFile))" />
  </Target>
</Project>