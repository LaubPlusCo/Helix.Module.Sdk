<!--
***********************************************************************************************
BasicFileSystemPublish.targets
  
  A basic crude filesystem copy replacement for the "classic" WebPublish target from Visual Studio. 
  
  Note; Relies on the Content msbuild item group. 
        This should not contain globs in subdirs. f.ex. app_config/**/*.config will ignore the 
        folder /app_config/ on copy.
  
                                                                      [Anders Laub // Laub+Co]
                                                                      
***********************************************************************************************
-->

<Project Condition="'$(UseBasicFileSystemPublish)' == 'true'">

  <PropertyGroup>

    <PublishDependsOn>
      BeforePublish;
      BasicFileSystemPublish;
      AfterPublish;
    </PublishDependsOn>

    <!-- Legacy support attempt - perhaps remove -->
    <WebPublishDependsOn>
      BeforePublish;
      BasicFileSystemPublish;
      AfterPublish;
    </WebPublishDependsOn>

    <BasicFileSystemPublishDependsOn>
       $(BasicFileSystemPublishDependsOn);
      _EnsurePublishTargetDirectory;
      _GatherFilesFromLegacyNugets;
      _GatherFilesForBasicFileSystemPublish;
      _ExcludeFilesFromBasicFileSystemPublish;
      _BasicFileSystemPublishCopyFiles;
    </BasicFileSystemPublishDependsOn>

    <_DeployOnBuildDependsOn>
      $(_DeployOnBuildDependsOn);
      $(PublishDependsOn);
    </_DeployOnBuildDependsOn>

  </PropertyGroup>


  <!-- Extension points for BeforePublish and AfterPublish-->
  <Target Name="BeforePublish" />
  <Target Name="AfterPublish" />

  <!--
  ***********************************************************************************************
  TARGET : _EnsurePublishTargetDirectory

      Ensures the publish target directory exists
  ***********************************************************************************************
 -->
  <Target Name="_EnsurePublishTargetDirectory">
    <Message Importance="High" Text="Creating $(PublishTargetDirectory)" Condition="!Exists('$(PublishTargetDirectory)')" />
    <MakeDir Directories="$(PublishTargetDirectory)" Condition="!Exists('$(PublishTargetDirectory)')" />
    <MakeDir Directories="$(PublishTargetDirectory)\bin" Condition="!Exists('$(PublishTargetDirectory)\bin')" />
  </Target>

  <!--
  ***********************************************************************************************
  TARGET : _GatherFilesForBasicFileSystemPublish

  
      Gather all content and compiled assemblies from project that should be copied. 
      Note; no temporary folder is made since no transformations are performed on the copied 
      files.
  ***********************************************************************************************
 -->
  <Target Name="_GatherFilesForBasicFileSystemPublish">
    <PropertyGroup>
      <OutDir Condition="!HasTrailingSlash('$(OutDir)')">$(OutDir)\</OutDir>
    </PropertyGroup>

    <ItemGroup Condition="'$(PublishSolutionOutput)' != 'true'">
      <_FileSystemCopyPublishFiles Include="@(Content)" Condition="'%(CopyToPublishDirectory)' != 'Never'" />
    </ItemGroup>

    <ItemGroup Condition="'$(PublishSolutionOutput)' == 'true'">
      <_FileSystemCopyPublishFiles Include="$(OutDir)**\*.*" Exclude="$(OutDir)*.dll;$(OutDir)*.pdb;$(OutDir)*.dll.config" />
    </ItemGroup>

    <ItemGroup>
      <_AssembliesForFileSystemCopy Include="$(OutDir)*.dll;$(OutDir)*.pdb" />
      <_FileSystemCopyBinAssemblies Include="@(_AssembliesForFileSystemCopy)" Condition="'$(UseBinFolder)' != 'false'" />
      <_FileSystemCopyPublishFiles Include="@(_AssembliesForFileSystemCopy)" Condition="'$(UseBinFolder)' == 'false'" />
    </ItemGroup>
  </Target>

  <!--
  ***********************************************************************************************
  TARGET : _ExcludeFilesFromBasicFileSystemPublish
  ***********************************************************************************************
 -->
  <Target Name="_ExcludeFilesFromBasicFileSystemPublish" Condition="'$(LegacyPreventCopyLocal)' == 'true'">
    <!-- _IgnoredFiles
          Item group for containing assembly names etc. that should not be published.
          Default contains the SitecoreAssemblies item group (ootb assemblies) 
          reference the Sitecore.Platform.Assemblies nuget package to set this.
        -->
    <ItemGroup>
      <_IgnoredFiles Include="@(SitecoreAssemblies)" Condition="'@(SitecoreAssemblies)' != ''" />

      <!-- Temporary; assembly is missing in the SitecoreAssemblies list -->
      <_IgnoredFiles Include="Sitecore.LayoutService.dll" />
    </ItemGroup>

    <ItemGroup>
      <_FileSystemCopyPublishFiles Remove="@(_IgnoredFiles)" Condition="'%(Filename)' != '' and '@(_IgnoredFiles)' != ''" />
      <_FileSystemCopyBinAssemblies Remove="@(_IgnoredFiles)" Condition="'%(Filename)' != '' and '@(_IgnoredFiles)' != ''" />
    </ItemGroup>
  </Target>



  <!--
  ***********************************************************************************************
  TARGET : _GatherFilesFromLegacyNugets
    
      Gather 
  ***********************************************************************************************
 -->

  <Target Name="_GatherFilesFromLegacyNugets" Condition="'$(SupportLegacyNugets)' == 'true'">
    <ItemGroup>
      <_LegacyNugetPackageContent Condition="%(PackageReference.CopyLegacyContentPath) != ''" Include="$(NugetPackageRoot)\%(PackageReference.Identity)\%(PackageReference.Version)\%(PackageReference.CopyLegacyContentPath)" />
      <_FileSystemCopyPublishFiles Include="@(_LegacyNugetPackageContent)" />
      <_LegacyNugetPackageAssemblies Condition="%(PackageReference.CopyLegacyAssembliesPath) != ''" Include="$(NugetPackageRoot)\%(PackageReference.Identity)\%(PackageReference.Version)\%(PackageReference.CopyLegacyAssembliesPath)" />
      <_FileSystemCopyBinAssemblies Include="@(_LegacyNugetPackageAssemblies)" Condition="'$(UseBinFolder)' != 'false'" />
      <_FileSystemCopyPublishFiles Include="@(_LegacyNugetPackageAssemblies)" Condition="'$(UseBinFolder)' == 'false'" />
    </ItemGroup>
  </Target>


  <!--
  ***********************************************************************************************
  TARGET : BasicFileSystemPublish
    
      Performs file copy
  ***********************************************************************************************
 -->
  <Target Name="_BasicFileSystemPublishCopyFiles">

    <PropertyGroup>
      <PublishSkipUnchangedFiles Condition="'$(PublishSkipUnchangedFiles)' == ''">true</PublishSkipUnchangedFiles>
    </PropertyGroup>

    <!-- Debug messages; consider if should just be Info  -->
    <Message Importance="High" Condition="'$(PublishSolutionOutput)' == 'true'" Text="$(MSBuildProjectName): Copying role type '$(SitecoreRoleType)' solution output for to '$(PublishTargetDirectory)'" />
    <Message Importance="High" Condition="'$(PublishSolutionOutput)' != 'true'" Text=" $(MSBuildProjectName): Copying project output to '$(PublishTargetDirectory)'" />

    <Copy SourceFiles="@(_FileSystemCopyPublishFiles)" DestinationFiles="@(_FileSystemCopyPublishFiles->'$(PublishTargetDirectory)\%(RecursiveDir)%(Filename)%(Extension)')" SkipUnchangedFiles="$(PublishSkipUnchangedFiles)" OverwriteReadOnlyFiles="true" />

    <Copy Condition="'$(UseBinFolder)' != 'false'" SourceFiles="@(_FileSystemCopyBinAssemblies)" DestinationFiles="@(_FileSystemCopyBinAssemblies->'$(PublishTargetDirectory)bin\%(RecursiveDir)%(Filename)%(Extension)')" SkipUnchangedFiles="$(PublishSkipUnchangedFiles)" OverwriteReadOnlyFiles="true" />

  </Target>

  <!--
  ***********************************************************************************************
  TARGET : BasicFileSystemPublish
    
      Trigger the pipeline - BasicFileSystemPublishDependsOn targets
  ***********************************************************************************************
 -->
  <Target Name="BasicFileSystemPublish" DependsOnTargets="$(BasicFileSystemPublishDependsOn)" Condition="'$(UseBasicFileSystemPublish)' == 'true' AND '$(PublishTargetDirectory)' != ''">
  </Target>

  <!--
  ***********************************************************************************************
  TARGET : _OutputLegacyNugetContent
    
      Copies legacy nuget content/assemblies to output dir.

  ***********************************************************************************************
 -->
  <Target Name="_OutputLegacyNugetContent" DependsOnTargets="_GatherFilesFromLegacyNugets" BeforeTargets="Build" Condition="'$(SupportLegacyNugets)' == 'true' AND '$(UseBasicFileSystemPublish)' == 'true' AND '$(DeployOnBuild)' != 'true'">
    <PropertyGroup>
      <OutDir Condition="!HasTrailingSlash('$(OutDir)')">$(OutDir)\</OutDir>
    </PropertyGroup>    
    <Copy SourceFiles="@(_LegacyNugetPackageContent)" DestinationFiles="@(_LegacyNugetPackageContent->'$(OutDir)\%(RecursiveDir)%(Filename)%(Extension)')" SkipUnchangedFiles="true" OverwriteReadOnlyFiles="false" />
    <Copy SourceFiles="@(_LegacyNugetPackageAssemblies)" DestinationFiles="@(_LegacyNugetPackageAssemblies->'$(OutDir)\%(RecursiveDir)%(Filename)%(Extension)')" SkipUnchangedFiles="true" OverwriteReadOnlyFiles="false" />
  </Target>

  <Target Name="_DeployOnBuild" DependsOnTargets="$(_DeployOnBuildDependsOn)" AfterTargets="Build" Condition="'$(UseBasicFileSystemPublish)' == 'true' AND '$(DeployOnBuild)'== 'true'">
  </Target>

</Project>